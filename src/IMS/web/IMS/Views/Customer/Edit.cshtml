@model IMS.BusinessModel.ViewModel.CustomerEditViewModel
@{
    ViewData["Title"] = "Customer Edit";
}
@section Styles{
    <style>
        .error {
            color: red;
        }
    </style>
}
<div class="container-fluid">
    <div class="row d-flex justify-content-center">
        <div class="col-8">
            <div class="card card-primary">
                <div class="card-header">
                    <h3 class="card-title">@ViewData["Title"]</h3>
                </div>
                @using (Html.BeginForm("Edit", "Customer", FormMethod.Post, htmlAttributes: new { @id = "myform", @class = "nav-link cmxform" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="card-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger", style = "color:red;" })
                        <div class="row">
                            <div class="col-8 form-group">
                                <label> @Html.LabelFor(m => m.Name)</label>
                                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @placeholder = "Name", @type = "text" })
                                @Html.ValidationMessageFor(model => model.Name, "", new { style = "color:red" })
                            </div>
                            <div class="col-4 form-group">
                                <label> @Html.LabelFor(m => m.Status)</label>
                                @Html.DropDownListFor(m => m.Status, (SelectList)ViewBag.StatusList, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-8 form-group">
                                <label> @Html.LabelFor(m => m.Email)</label>
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email Address", @type = "text" })
                                <span>@Html.ValidationMessageFor(model => model.Email)</span>
                            </div>
                            <div class="col-4 form-group">
                                <label> @Html.LabelFor(m => m.ContactNumber)</label>
                                @Html.TextBoxFor(m => m.ContactNumber, new { @class = "form-control", @placeholder = "Contact Number", @type = "text", @pattern = "^(?:\\+?88)?01[13-9]\\d{8}$" })
                                <span>@Html.ValidationMessageFor(model => model.ContactNumber)</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12 form-group">
                                <label> @Html.LabelFor(m => m.Address)</label>
                                @Html.TextAreaFor(m => m.Address, new { @class = "form-control", @placeholder = "Address", @type = "text" })
                                <span>@Html.ValidationMessageFor(model => model.Address)</span>
                            </div>
                        </div>
                        @Html.HiddenFor(model => model.Id)
                    </div>
                    <div class="card-footer">
                        <button type="submit" class="btn btn-primary btn-lg btn-block">Submit</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="~/Assets/js/validation/jquery.min.js"></script>
    <script src="~/Assets/js/validation/jquery.validate.min.js"></script>
    <script src="~/Assets/js/validation/additional-methods.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#myform").validate({

                // In 'rules' user have to specify all the
                // constraints for respective fields
                rules: {
                    Name: {
                        required: true,
                        minlength: 3,
                        maxlength: 30
                    },
                    Address: {
                        required: true,
                        minlength: 10,
                        maxlength: 255
                    },
                    Email: {
                        required: true,
                        email: true,
                        maxlength: 255
                    },
                    ContactNumber: {
                        required: true
                    }
                },
                // In 'messages' user have to specify message as per rules
                messages: {
                    Name: {
                        required: " Please enter category name",
                        minlength: "At least 3 characters required",
                        maxlength: "At most 30 characters valid",
                    },
                    Address: {
                        required: " Please enter category name",
                        minlength: "At least 10 characters required",
                        maxlength: "At most 255 characters valid",
                    },
                    Email: {
                        required: " Please enter category name",
                        email: " Enter valid email",
                        maxlength: "At most 255 characters valid",
                    }
                }
            });
        });
    </script>
}
